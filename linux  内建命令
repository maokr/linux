eval：
---eval args 把args转化为shell命令，这样就可以执行作为字符串的命令，如读取外部文件中的shell命令这个命令可以执行写在字符串里的shell命令

exec：
---exec args 在不创建子shell的情况下，执行后面的shell命令，然后退出当前shell环境

read：要与Linux交互，脚本获取键盘输入的结果是必不可少的，read可以读取键盘输入的字符，当然因为linux可以重定向，
      所以文本内容啥的都可以重定向给read，这样就可以循环读文本
read命令用于从标准输入中读取输入单行，并将读取的单行根据IFS变量分裂成多个字段，并将分割后的字段分别赋值给指定的变量列表var_name
选项说明：
-a：将分裂后的字段依次存储到指定的数组中，存储的起始位置从数组的index=0开始。
-d：指定读取行的结束符号。默认结束符号为换行符。
-n：限制读取N个字符就自动结束读取，如果没有读满N个字符就按下回车或遇到换行符，则也会结束读取。
-N：严格要求读满N个字符才自动结束读取，即使中途按下了回车或遇到了换行符也不结束。其中换行符或回车算一个字符。
-p：给出提示符。默认不支持"\n"换行，要换行需要特殊处理，见下文示例。例如，"-p 请输入密码："
-r：禁止反斜线的转义功能。这意味着"\"会变成文本的一部分。
-s：静默模式。输入的内容不会回显在屏幕上。
-t：给出超时时间，在达到超时时间时，read退出并返回错误。也就是说不会读取任何内容，即使已经输入了一部分。

shift：
      shfit命令会往左从新命名所有的参数位置
比如原先脚本有三个参数 $1,$2,$3,shift一下，原先的$1被舍弃,$2-->$1,$3--$2,一般用于不知道参数个数的循环状态使用
